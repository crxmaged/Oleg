This behavior makes it easier for formats like comma separated values (CSV) files representing tabular data. 
Consecutive commas represent a blank column.
You can pass an optional StringSplitOptions.RemoveEmptyEntries parameter to exclude any empty strings in the 
returned array. For more complicated processing of the returned collection, you can use LINQ to manipulate the 
result sequence. String.Split can use multiple separator characters. The following example uses spaces, commas, 
periods, colons, and tabs, all passed in an array containing these separating characters, to Split. The loop at 
the bottom of the code displays each of the words in the returned array.